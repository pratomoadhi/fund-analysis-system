version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg15
    container_name: fund-postgres
    environment:
      POSTGRES_USER: funduser
      POSTGRES_PASSWORD: fundpass
      POSTGRES_DB: funddb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init_pgvector.sql:/docker-entrypoint-initdb.d/init_pgvector.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U funduser -d funddb"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: fund-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fund-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://funduser:fundpass@postgres:5432/funddb
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4-turbo-preview}
      - OPENAI_EMBEDDING_MODEL=${OPENAI_EMBEDDING_MODEL:-text-embedding-3-small}
      - UPLOAD_DIR=/app/uploads
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        PYTHONPATH=/app python -m app.db.init_db &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fund-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  backend_uploads:
